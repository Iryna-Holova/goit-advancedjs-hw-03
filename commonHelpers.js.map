{"version":3,"file":"commonHelpers.js","sources":["../src/js/cat-api.js","../src/js/common.js","../src/js/templates.js","../src/js/toaster.js","../src/js/cat-renderer.js","../src/js/index.js"],"sourcesContent":["import axios from 'axios';\n\n// Set default headers and base URL for all axios requests\naxios.defaults.headers.common['x-api-key'] =\n  'live_sQSiU8IUrkSu8g32YTEYKLB8DcWcIsBNMk0omc8QjPKH9Bo7QndZdmjMVf3YCCwv';\naxios.defaults.baseURL = 'https://api.thecatapi.com/v1';\n\n/**\n * Fetches a list of cat breeds from TheCatAPI.\n * @returns {Promise<Array>} A promise that resolves to an array of cat breeds.\n */\nfunction fetchBreeds() {\n  return axios.get('/breeds').then(response => response.data);\n}\n\n/**\n * Fetches a cat info by breed ID from TheCatAPI.\n * @param {string} breedId - The ID of the cat breed.\n * @returns {Promise<Object>} A promise that resolves to an object representing the cat info.\n */\nfunction fetchCatByBreed(breedId) {\n  return axios\n    .get(`/images/search?breed_ids=${breedId}`)\n    .then(response => response.data[0]);\n}\n\nexport { fetchBreeds, fetchCatByBreed };\n","const common = {\n  LS_KEY_OPTION: 'user-option',\n  PLACEHOLDER_LOADING: 'Loading...',\n  PLACEHOLDER_SUCCESS: 'Select a cat breed...',\n  PLACEHOLDER_ERROR: 'Breeds not found...',\n};\n\nexport { common };\n","/**\n * Generates HTML markup for cat information.\n * @param {Object} data - An object containing cat information.\n * @param {string} data.url - The URL of the cat image.\n * @param {Array} data.breeds - An array of cat breeds.\n * @param {string} data.breeds[0].name - The name of the cat breed.\n * @param {string} data.breeds[0].description - The description of the cat breed.\n * @param {string} data.breeds[0].temperament - The temperament of the cat breed.\n * @returns {string} HTML markup for the cat information.\n */\nconst catInfoMarkup = data => `\n  <img class=\"cat-img\" src=\"${data.url}\" alt=\"\" />\n  <div class=\"cat-text\">\n    <h1 class=\"cat-title\">${data.breeds[0].name}</h1>\n    <p>${data.breeds[0].description}</p>\n    <p><span class=\"cat-temp\">Temperament:</span> ${data.breeds[0].temperament}</p>\n  </div>`;\n\n/**\n * Generates HTML markup for an error message when a cat breed is not found.\n * @param {string} breed - The name of the cat breed that was not found.\n * @returns {string} HTML markup for the error message.\n */\nconst catErrorMarkup = breed => `\n  <p class=\"error\">Oops! ${breed} not found :(<br>Try reloading the page!</p>`;\n\nexport { catInfoMarkup, catErrorMarkup };\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n/**\n * Display an error toast message using iziToast.\n *\n * @param {string} message - The error message to be displayed.\n * @returns {void}\n * @throws {Error} Throws an error if the iziToast library is not available.\n * @example\n * // Usage\n * import { toastError } from './helpers/toaster';\n * toastError('This is an error message.');\n */\nfunction toastError(message) {\n  iziToast.error({\n    message,\n    position: 'topCenter',\n  });\n}\n\nexport { toastError };\n","import { fetchCatByBreed } from './cat-api';\nimport { catErrorMarkup, catInfoMarkup } from './templates';\nimport { toastError } from './toaster';\n\nconst elements = {\n  container: document.querySelector('.cat-info'),\n  spinner: document.querySelector('.loader-spinner'),\n};\n\n/**\n * Render cat information for the selected breed.\n * @param {Object} cat - Selected cat breed.\n * @param {string} cat.value - Cat breed identifier.\n * @param {string} cat.text - Cat breed name.\n */\nfunction renderCat(cat) {\n  elements.container.innerHTML = '';\n  elements.container.style.opacity = '0';\n  elements.spinner.style.display = 'block';\n\n  fetchCatByBreed(cat.value)\n    .then(data => {\n      elements.container.innerHTML = catInfoMarkup(data);\n    })\n    .catch(error => {\n      elements.container.innerHTML = catErrorMarkup(cat.text);\n      toastError(error.message);\n    })\n    .finally(() => {\n      elements.spinner.style.display = 'none';\n      elements.container.style.opacity = '1';\n    });\n}\n\nexport { renderCat };\n","import SlimSelect from 'slim-select';\n// import 'slim-select/dist/slimselect.css';\nimport { fetchBreeds } from './cat-api';\nimport { common } from './common';\nimport { renderCat } from './cat-renderer';\nimport { toastError } from './toaster';\n\n/**\n * Initialization of the SlimSelect dropdown.\n * @type {SlimSelect}\n */\nconst select = new SlimSelect({\n  select: '#select',\n  settings: {\n    disabled: true,\n    placeholderText: common.PLACEHOLDER_LOADING,\n  },\n  events: {\n    afterChange: handleOptionChange,\n  },\n});\n\n/**\n * Load the list of cat breeds.\n * @returns {Promise<void>}\n */\nfunction loadBreeds() {\n  fetchBreeds()\n    .then(data => {\n      const options = data.map(({ id, name }) => ({ text: name, value: id }));\n      select.enable();\n      select.setData([\n        { placeholder: true, text: common.PLACEHOLDER_SUCCESS },\n        ...options,\n      ]);\n\n      const userOption = localStorage.getItem(common.LS_KEY_OPTION);\n      if (userOption) {\n        select.setSelected(userOption);\n      }\n    })\n    .catch(error => {\n      select.setData([{ placeholder: true, text: common.PLACEHOLDER_ERROR }]);\n      toastError(error.message);\n    });\n}\n\n/**\n * Event handler for changing the selected option.\n * @param {SlimSelect[]} selected - Selected option.\n */\nfunction handleOptionChange([option]) {\n  if (option.placeholder) return; // Cancel event if option is not selected\n  renderCat(option);\n  localStorage.setItem(common.LS_KEY_OPTION, option.value);\n}\n\n// Initialization after the page is loaded.\ndocument.addEventListener('DOMContentLoaded', loadBreeds);\n"],"names":["axios","fetchBreeds","response","fetchCatByBreed","breedId","common","catInfoMarkup","data","catErrorMarkup","breed","toastError","message","iziToast","elements","renderCat","cat","error","select","SlimSelect","handleOptionChange","loadBreeds","options","id","name","userOption","option"],"mappings":"owBAGAA,EAAM,SAAS,QAAQ,OAAO,aAC5B,wEACFA,EAAM,SAAS,QAAU,+BAMzB,SAASC,GAAc,CACrB,OAAOD,EAAM,IAAI,SAAS,EAAE,KAAKE,GAAYA,EAAS,IAAI,CAC5D,CAOA,SAASC,EAAgBC,EAAS,CAChC,OAAOJ,EACJ,IAAI,4BAA4BI,GAAS,EACzC,KAAKF,GAAYA,EAAS,KAAK,EAAE,CACtC,CCxBA,MAAMG,EAAS,CACb,cAAe,cACf,oBAAqB,aACrB,oBAAqB,wBACrB,kBAAmB,qBACrB,ECKMC,EAAgBC,GAAQ;AAAA,8BACAA,EAAK;AAAA;AAAA,4BAEPA,EAAK,OAAO,GAAG;AAAA,SAClCA,EAAK,OAAO,GAAG;AAAA,oDAC4BA,EAAK,OAAO,GAAG;AAAA,UAQ7DC,EAAiBC,GAAS;AAAA,2BACLA,gDCV3B,SAASC,EAAWC,EAAS,CAC3BC,EAAS,MAAM,CACb,QAAAD,EACA,SAAU,WACd,CAAG,CACH,CCfA,MAAME,EAAW,CACf,UAAW,SAAS,cAAc,WAAW,EAC7C,QAAS,SAAS,cAAc,iBAAiB,CACnD,EAQA,SAASC,EAAUC,EAAK,CACtBF,EAAS,UAAU,UAAY,GAC/BA,EAAS,UAAU,MAAM,QAAU,IACnCA,EAAS,QAAQ,MAAM,QAAU,QAEjCV,EAAgBY,EAAI,KAAK,EACtB,KAAKR,GAAQ,CACZM,EAAS,UAAU,UAAYP,EAAcC,CAAI,CACvD,CAAK,EACA,MAAMS,GAAS,CACdH,EAAS,UAAU,UAAYL,EAAeO,EAAI,IAAI,EACtDL,EAAWM,EAAM,OAAO,CAC9B,CAAK,EACA,QAAQ,IAAM,CACbH,EAAS,QAAQ,MAAM,QAAU,OACjCA,EAAS,UAAU,MAAM,QAAU,GACzC,CAAK,CACL,CCrBA,MAAMI,EAAS,IAAIC,EAAW,CAC5B,OAAQ,UACR,SAAU,CACR,SAAU,GACV,gBAAiBb,EAAO,mBACzB,EACD,OAAQ,CACN,YAAac,CACd,CACH,CAAC,EAMD,SAASC,GAAa,CACpBnB,EAAa,EACV,KAAKM,GAAQ,CACZ,MAAMc,EAAUd,EAAK,IAAI,CAAC,CAAE,GAAAe,EAAI,KAAAC,MAAY,CAAE,KAAMA,EAAM,MAAOD,CAAE,EAAG,EACtEL,EAAO,OAAM,EACbA,EAAO,QAAQ,CACb,CAAE,YAAa,GAAM,KAAMZ,EAAO,mBAAqB,EACvD,GAAGgB,CACX,CAAO,EAED,MAAMG,EAAa,aAAa,QAAQnB,EAAO,aAAa,EACxDmB,GACFP,EAAO,YAAYO,CAAU,CAErC,CAAK,EACA,MAAMR,GAAS,CACdC,EAAO,QAAQ,CAAC,CAAE,YAAa,GAAM,KAAMZ,EAAO,iBAAmB,CAAA,CAAC,EACtEK,EAAWM,EAAM,OAAO,CAC9B,CAAK,CACL,CAMA,SAASG,EAAmB,CAACM,CAAM,EAAG,CAChCA,EAAO,cACXX,EAAUW,CAAM,EAChB,aAAa,QAAQpB,EAAO,cAAeoB,EAAO,KAAK,EACzD,CAGA,SAAS,iBAAiB,mBAAoBL,CAAU"}